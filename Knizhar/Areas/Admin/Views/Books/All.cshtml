@model BookSearchViewModel

@{
    ViewBag.Title = "Books Administration";
}

<h1>All Books</h1>

<table class="table table-stripped">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Book Name</th>
            <th scope="col">Author</th>
            <th scope="col">The Book Is For/Price</th>
            <th scope="col">Approved</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in Model.Books)
        {
            <tr>
                <td scope="col">@book.Id</td>
                <td scope="col">@book.Name</td>
                <td scope="col">@book.AuthorName</td>
                <td scope="col">@book.TheBookIsFor<br>@book.Price</td>
                @*<td scope="col">@book.Price</td>*@
                <td scope="col">@(book.isPublic ? "Yes" : "No")</td>
                <td scope="col">
                    <a asp-area="" asp-controller="Books" asp-action="Details" asp-route-id="@book.Id" asp-route-information="@book.GetInformation()" class="btn btn-info btn-sm float-left ml-1" target="_blank">Details</a>
                    <a asp-area="" asp-controller="Books" asp-action="Edit" asp-route-id="@book.Id" class="btn btn-success btn-sm float-left ml-1">Edit</a>
                    <a asp-area="Admin" asp-controller="Books" asp-action="ChangeVisibility" asp-route-id="@book.Id" class="btn btn-primary btn-sm float-left ml-1">@(book.isPublic ? "Hide" : "Show")</a>
                    <a asp-area="" asp-controller="Books" asp-action="Delete" asp-route-id="@book.Id" class="btn btn-warning btn-sm float-left ml-1">Delete</a>
                    <a asp-area="" asp-controller="Books" asp-action="Archive" asp-route-id="@book.Id" class="btn btn-secondary btn-sm float-left ml-1 @(book.isArchived ? "disabled" : string.Empty)">@(book.isArchived ? "Archived" : "Archive")</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalBooks /BookSearchViewModel.BooksPerPage);
}

<div class="row justify-content-center">
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item">
                <a class="btn btn-primary @(Model.CurrentPage ==1 ? "disabled" : string.Empty)"
                   asp-controller="Books"
                   asp-action="All"
                   asp-route-currentPage="@previousPage">Previous</a>
            </li>
            @if (Model.CurrentPage - 1 == 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Books"
                       asp-action="All">@(Model.CurrentPage-1)</a>
                </li>
            }
            <li class="page-item active"><a class="page-link" href="#">@Model.CurrentPage</a></li>
            @if (Model.CurrentPage + 1 == maxPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Books"
                       asp-action="All">@(Model.CurrentPage+1)</a>
                </li>
            }
            <li class="page-item">
                <a class="btn btn-primary float-right @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)"
                   asp-controller="Books"
                   asp-action="All">Next</a>
            </li>
        </ul>
    </nav>
</div>