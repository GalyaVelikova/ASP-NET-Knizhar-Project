@model BookSearchServiceModel

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalBooks / BookSearchServiceModel.BooksPerPage);
}

<div class="row justify-content-center">
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item">
                <a class="btn btn-primary @(Model.CurrentPage ==1 ? " disabled" : string.Empty)"
                   asp-controller="Books"
                   asp-action="Filter"
                   asp-route-currentPage="@previousPage">Previous</a>
            </li>
            @if (Model.CurrentPage - 1 == 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Books"
                       asp-action="Filter"
                       asp-route-currentPage="@(Model.CurrentPage+1)">@(Model.CurrentPage-1)</a>
                </li>
            }
            <li class="page-item active"><a class="page-link" href="#">@Model.CurrentPage</a></li>
            @if (Model.CurrentPage + 1 == maxPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Books"
                       asp-action="Filter"
                       asp-route-currentPage="@(Model.CurrentPage+1)">@(Model.CurrentPage+1)</a>
                </li>
            }
            <li class="page-item">
                <a class="btn btn-primary float-right @(Model.CurrentPage == maxPage ? " disabled" : string.Empty)"
                   asp-controller="Books"
                   asp-action="Filter"
                   asp-route-currentPage="@(Model.CurrentPage+1)">Next</a>
            </li>
        </ul>
    </nav>
</div>