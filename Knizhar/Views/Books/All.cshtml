@model BookSearchViewModel

@{
    ViewBag.Title = "Home Page";
}


<form method="get">
    <div class="row mb-5">
        <div class="form-group col-4">
            <input asp-for="SearchTerm" class="form-control font-weight-light" placeholder="Search by: ISBN, Book Name, Author" />
        </div>
        <div class="form-group col-md-2">
            <div class="form-group">
                <select asp-for="Genre" class="form-control font-weight-light">
                    <option value="" selected>Choose genre...</option>
                    <option value="">All genres</option>
                    @foreach (var genre in Model.Genres)
                    {
                        <option value="@genre">@genre</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group col-md-2">
            <div class="form-group">
                <select asp-for="Town" class="form-control font-weight-light">
                    <option value="" selected>Choose town...</option>
                    <option value="">All towns</option>
                    @foreach (var town in Model.Towns)
                    {
                        <option value="@town">@town</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group col-2">
            <div class="form-group">
                <select asp-for="Language" class="form-control font-weight-light">
                    <option value="" selected>All languages:</option>
                    @foreach (var language in Model.Languages)
                    {
                        <option value="@language">@language</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group col-2">
            <div class="form-group">
                <select asp-for="Sorting" class="form-control font-weight-light">
                    <option value="0" selected>Filter by:</option>
                    <option value="1">Newest books</option>
                    <option value="2">By Book name</option>
                    <option value="3">By Author</option>
                    <option value="4">For Give away</option>
                    <option value="5">Cheapest</option>
                    <option value="6">Most expensive</option>
                </select>
            </div>
        </div>
    </div>
</form>
@if (!Model.Books.Any())
{
    <h2 class="text-center">No books found by the given criteria.</h2>
}

<partial name="_BooksPartial" model="@Model.Books" />
@{

    var previousPage = Model.CurrentPage - 1;
    var nextPage = Model.CurrentPage + 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalBooks / BookSearchViewModel.BooksPerPage);
}


    <div class="row justify-content-center">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item">
                    <a class="btn btn-primary @(Model.CurrentPage ==1 ? "disabled" : string.Empty)"
                       asp-controller="Books"
                       asp-action="All"
                       asp-route-currentPage="@previousPage"
                       asp-route-genre="@Model.Genre"
                       asp-route-town="@Model.Town"
                       asp-route-language="@Model.Language"
                       asp-route-searchTerm=" @Model.SearchTerm"
                       asp-route-sorting="@((int)Model.Sorting)">Previous</a>
                </li>
                @if (Model.CurrentPage - 1 >= 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="Books"
                           asp-action="All"
                           asp-route-currentPage="@(Model.CurrentPage-1)"
                           asp-route-genre="@Model.Genre"
                           asp-route-town="@Model.Town"
                           asp-route-language="@Model.Language"
                           asp-route-searchTerm=" @Model.SearchTerm"
                           asp-route-sorting="@((int)Model.Sorting)">@(Model.CurrentPage-1)</a>
                    </li>
                }
                <li class="page-item active"><a class="page-link" href="#">@Model.CurrentPage</a></li>
                    <li class="page-item">
                        <a class="page-link" asp-controller="Books"
                           asp-action="All"
                           asp-route-currentPage="@(Model.CurrentPage)"
                           asp-route-genre="@Model.Genre"
                           asp-route-town="@Model.Town"
                           asp-route-language="@Model.Language"
                           asp-route-searchTerm=" @Model.SearchTerm"
                           asp-route-sorting="@((int)Model.Sorting)">@(Model.CurrentPage+1)</a>
                    </li>
                @if (Model.CurrentPage + 1 >= maxPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="Books"
                           asp-action="All"
                           asp-route-currentPage=@nextPage
                           asp-route-genre="@Model.Genre"
                           asp-route-town="@Model.Town"
                           asp-route-language="@Model.Language"
                           asp-route-searchTerm=" @Model.SearchTerm"
                           asp-route-sorting="@((int)Model.Sorting)">@(Model.CurrentPage+1)</a>
                    </li>
                }
                <li class="page-item">
                    <a class="btn btn-primary float-right @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)"
                       asp-controller="Books"
                       asp-action="All"
                       asp-route-currentPage="@(Model.CurrentPage+1)"
                       asp-route-genre="@Model.Genre"
                       asp-route-town="@Model.Town"
                       asp-route-language="@Model.Language"
                       asp-route-searchTerm=" @Model.SearchTerm"
                       asp-route-sorting="@((int)Model.Sorting)">Next</a>
                </li>
            </ul>
        </nav>
    </div>
